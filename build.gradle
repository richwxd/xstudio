group 'com.xstudio'
version '1.0.0-SNAPSHOT'

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "maven-publish"

    sourceCompatibility = 1.8

    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
        }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile "org.projectlombok:lombok:1.18.10"
        annotationProcessor "org.projectlombok:lombok:1.18.10"

        // https://mvnrepository.com/artifact/com.alibaba/fastjson
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'

        testCompile group: 'junit', name: 'junit', version: '4.12'

        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'
    }

    task allTask {
        println project.name
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    // 打包源码
    task sourceJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourceJar
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/xbeeant/xstudio")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USER")
                    password = project.findProperty("gpr.key") ?: System.getenv("PWD")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
            mavenJava(MavenPublication) {
                artifact sourceJar
                artifact javadocJar
            }
        }
    }

    javadoc {
        options{
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
        }
    }
}